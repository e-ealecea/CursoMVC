@model cursoNET.Models.ViewModel.EditUserViewModel
@{
    ViewBag.Title = "Editar usuario";
}

<h2>@ViewBag.Title</h2>

<!--FORMULARIO POR .NET-->

<div class="row">
    <div class="col-md-12">
        <!--Parametro: Acción(método), Controlador, Metodo y el new va estilos, clases etc.-->
        @using (Html.BeginForm("Edit", "User", FormMethod.Post, new { role = "form", @class = "" }))
        {
            <!--Seguridad, importante poner-->
            @Html.AntiForgeryToken()
            <!--Div donde se pondrá el error probocado por data annotation-->
            @Html.ValidationMessage("error", new { @class = "text-danger" })

            <!--Pondrá el display de email, d es una referencia del UserViewModel-->
            @Html.LabelFor(d => d.Email)

            <!--Pone el campo de texto, parametros: campo y que elemento de nuestro modelo es. El segundo es estilo-->
            @Html.TextBoxFor(d => d.Email, new { @class = "form-control" })
            <!--Mostrar errores-->
            @Html.ValidationMessage("Email", new { @class = "text-danger" })
            <br>

            @Html.LabelFor(d => d.Password)
            <!--Input tipo password-->
            @Html.PasswordFor(d => d.Password, new { @class = "form-control" })
            <br>

            @Html.LabelFor(d => d.ConfirmPassword)
                
            @Html.PasswordFor(d => d.ConfirmPassword, new { @class = "form-control" })
            @Html.ValidationMessage("ConfirmPassword", new { @class = "text-danger" })
            <br>

            @Html.LabelFor(d => d.Edad)
            @Html.TextBoxFor(d => d.Edad, new { @class = "form-control" })
            @Html.ValidationMessage("Edad", new { @class = "text-danger" })
            <br>

            <div class="container text-center">
                <input type="submit" class="btn btn-success" value="Editar" />
            </div>
        }
    </div>
</div>

